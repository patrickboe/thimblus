/*
 * Copyright 2011, Patrick Boe
 * =========================== 
 * This program is distributed under the terms of the GNU General Public License.
 *
 * This file is part of Thimblus.
 * 
 * Thimblus is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Thimblus is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Thimblus.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.thimblus.test.model

import org.scalatest.WordSpec
import org.scalatest.matchers.ShouldMatchers
import org.scalatest.TestFailedException
import org.thimblus.model.PlanDispatch
import akka.actor._
import Actor._

class PlanDispatchSuite extends WordSpec with ShouldMatchers {
  val generator = ()=>actorOf(
    new Actor { 
      def receive = {case _ => self.reply("hi")}
    }
  )
  "getRepo" should {
    "Return an actor ref generated by the actor generator" in {
      val svc = new PlanDispatch(generator)
      (svc.getRepo() !! "heyooo!").get should equal ("hi")
      svc.close()
    }
  }
  "close" should {
    "close all generated actors" in {
      val svc = new PlanDispatch(generator)
      val repos = (0 to 2) map (i => svc.getRepo())
      svc.close()
      for(r <- repos) {
        evaluating {r !! "ping"} should produce [ActorInitializationException]
      }
    }
  }
}
